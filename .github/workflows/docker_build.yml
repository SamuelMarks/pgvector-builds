name: docker_build

on:
  push:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Modify Dockerfile with latest version
        id: pgvector_version
        shell: bash
        run: |
          version="$(curl -s https://api.github.com/repos/pgvector/pgvector/tags | jq -r .[0].name)"
          # rather than pass in next `step` with `build-args` replace here:
          sed -i '/^ARG pgvector_version=/c\ARG pgvector_version='"$version" Dockerfile.alpine
          # Don't run next `step` if Dockerfile unchanged
          # git diff --exit-code Dockerfile.alpine >/dev/null && >&2 echo 'No Dockerfile changes made' && exit 3
          printf 'pgvector_version=%s\n' "$version" >> "$GITHUB_OUTPUT"
          printf '%s\n' "$version" > VERSION
          echo "::set-output name=pgvector_version::$version"

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            Dockerfile:
              - 'Dockerfile*'

#    if: needs.prepare.outputs.Dockerfile == 'true'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: Dockerfile.alpine
          tags: |
            samuelmarks/pgvector-builds:alpine_latest
            samuelmarks/pgvector-builds:alpine_${{ steps.pgvector_version.outputs.pgvector_version }}
        env:
          pgvector_version: ${{ steps.pgvector_version.outputs.pgvector_version }}
